{"version":3,"sources":["_fonts.scss","utils/_extends.scss","_typography.scss","utils/_include-media.scss","utils/_mixins.scss","_header.scss","utils/_vars.scss","_main-sections.scss","_footer.scss","main.scss"],"names":[],"mappings":"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","file":"main.css","sourcesContent":["@import url(\"https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100;0,300;0,400;0,500;0,700;0,900;1,100;1,300;1,400;1,500;1,700;1,900&display=swap\");\r\n","%h1 {\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 60px;\r\n  line-height: 60px;\r\n}\r\n\r\n%header__typography {\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  line-height: 12px;\r\n  letter-spacing: 2px;\r\n  text-transform: uppercase;\r\n  text-decoration: none;\r\n  color: #fff;\r\n  list-style: none;\r\n}\r\n","h1 {\r\n  @extend %h1;\r\n}\r\n\r\n.title {\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n  justify-content: center;\r\n  margin-top: 0;\r\n  margin-bottom: 93px;\r\n  align-self: center;\r\n  font-family: \"Roboto\", sans-serif;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 48px;\r\n  letter-spacing: -1.5px;\r\n  @include mobile(font-size, 36px);\r\n  @include mobile(line-height, 36px);\r\n  @include mobile(margin-bottom, 53px);\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 55px;\r\n    @include mobile(top, 43px);\r\n    height: 16px;\r\n    width: 23px;\r\n    background: url(/images/crown.svg) no-repeat center;\r\n  }\r\n\r\n  &--big {\r\n    margin-top: 0;\r\n    align-self: flex-start;\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-style: normal;\r\n    font-weight: bold;\r\n    font-size: 48px;\r\n    letter-spacing: -1.5px;\r\n\r\n    @include mobile(font-size, 36px);\r\n    @include mobile(line-height, 36px);\r\n    @include mobile(margin-bottom, 48px);\r\n  }\r\n\r\n  &--small {\r\n    margin-top: 0;\r\n    font-family: \"Roboto\", sans-serif;\r\n    font-weight: 500;\r\n    font-size: 24px;\r\n    line-height: 30px;\r\n    color: #0075ff;\r\n  }\r\n\r\n  &--x-small {\r\n    font-size: 14px;\r\n    line-height: 27px;\r\n    font-weight: 400;\r\n    color: #9fadc2;\r\n    margin: 0;\r\n  }\r\n}\r\n\r\n.article__title {\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.text {\r\n  font-family: \"Roboto\", sans-serif;\r\n  // font-style: normal;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  line-height: 27px;\r\n  color: #3e3e3e;\r\n}\r\n\r\n.article__text {\r\n  font-size: 16px;\r\n  line-height: 27px;\r\n  margin-top: 13px;\r\n  font-weight: 300;\r\n  color: #3e3e3e;\r\n}\r\n\r\n.link {\r\n  text-decoration: none;\r\n  color: #0075ff;\r\n  &--blue {\r\n    text-decoration: none;\r\n    color: #0075ff;\r\n  }\r\n}\r\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Hugo Giraudel (@hugogiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  \"phone\": 320px,\r\n  \"tablet\": 877px,\r\n  \"desktop\": 1024px,\r\n) !default;\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  \"screen\": \"screen\",\r\n  \"print\": \"print\",\r\n  \"handheld\": \"handheld\",\r\n  \"landscape\": \"(orientation: landscape)\",\r\n  \"portrait\": \"(orientation: portrait)\",\r\n  \"retina2x\": \"(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)\",\r\n  \"retina3x\": \"(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)\",\r\n) !default;\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  \"px\": 1,\r\n  \"em\": 0.01,\r\n  \"rem\": 0.1,\r\n  \"\": 0,\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: \"desktop\" !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: (\"screen\", \"portrait\", \"landscape\") !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists(\"at-error\") {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {\r\n  }\r\n}\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {\r\n}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log(\"`#{$im-no-media-breakpoint}` is not a valid breakpoint.\") {\r\n    }\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == \"max\" and $value <= $no-media-breakpoint-value) or\r\n        ($prefix == \"min\" and $value > $no-media-breakpoint-value)\r\n      {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in (\">=\", \">\", \"<=\", \"<\", \"≥\", \"≤\") {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log(\"No operator found in `#{$expression}`.\");\r\n}\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: \"width\";\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index((\"<\", \"<=\", \"≤\"), $operator), \"max\", \"min\");\r\n}\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log(\"Unknown unit `#{unit($value)}`.\");\r\n  }\r\n\r\n  @if $operator == \">\" {\r\n    $value: $value + $interval;\r\n  } @else if $operator == \"<\" {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return \"(#{$prefix}-#{$dimension}: #{$value})\";\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Hugo Giraudel\r\n/// @access private\r\n////\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == \"number\" {\r\n    @return $value;\r\n  } @else if type-of($value) != \"string\" {\r\n    $_: im-log(\"Value for `to-number` should be a number or a string.\");\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == \"-\");\r\n  $numbers: (\r\n    \"0\": 0,\r\n    \"1\": 1,\r\n    \"2\": 2,\r\n    \"3\": 3,\r\n    \"4\": 4,\r\n    \"5\": 5,\r\n    \"6\": 6,\r\n    \"7\": 7,\r\n    \"8\": 8,\r\n    \"9\": 9,\r\n  );\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == \"+\" or $first-character == \"-\") {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not(index(map-keys($numbers), $character) or $character == \".\") {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i));\r\n    }\r\n\r\n    @if $character == \".\" {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: (\r\n    \"px\": 1px,\r\n    \"cm\": 1cm,\r\n    \"mm\": 1mm,\r\n    \"%\": 1%,\r\n    \"ch\": 1ch,\r\n    \"pc\": 1pc,\r\n    \"in\": 1in,\r\n    \"em\": 1em,\r\n    \"rem\": 1rem,\r\n    \"pt\": 1pt,\r\n    \"ex\": 1ex,\r\n    \"vw\": 1vw,\r\n    \"vh\": 1vh,\r\n    \"vmin\": 1vmin,\r\n    \"vmax\": 1vmax,\r\n  );\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log(\"Invalid unit `#{$unit}`.\");\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Hugo Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n    (not $im-media-support and im-intercepts-static-breakpoint($conditions...))\r\n  {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2) ...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}\r\n","@mixin hover($_property, $_toValue) {\r\n  transition: #{$_property} 0.3s;\r\n  &:hover {\r\n    #{$_property}: $_toValue;\r\n  }\r\n}\r\n\r\n@mixin active($_property, $_toValue) {\r\n  transition: #{$_property} 0.3s;\r\n  &:active {\r\n    #{$_property}: $_toValue;\r\n  }\r\n}\r\n\r\n@mixin mobile($_property, $_toValue) {\r\n  @include media(\"<=tablet\") {\r\n    #{$_property}: $_toValue;\r\n  }\r\n}\r\n\r\n@mixin desktop($_property, $_toValue) {\r\n  @include media(\">=tablet\", \"<=desktop\") {\r\n    #{$_property}: $_toValue;\r\n  }\r\n}\r\n\r\n@mixin max-width {\r\n  width: 100%;\r\n  max-width: $max-width;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n}\r\n",".header {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: $header--padding-l;\r\n  height: calc(100vh - #{$header--height-corr-l});\r\n  background: url(\"../images/header.png\") no-repeat center;\r\n  background-size: cover;\r\n  @extend %header__typography;\r\n\r\n  @include desktop(padding, $header--padding-m);\r\n  @include desktop(height, calc(100vh - #{$header--height-corr-m}));\r\n\r\n  @include mobile(padding, $header--padding-s);\r\n  @include mobile(height, calc(100vh - #{$header--height-corr-s}));\r\n\r\n  &__top {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin-top: 0;\r\n    margin-bottom: auto;\r\n    @include max-width;\r\n\r\n  }\r\n\r\n  &__title {\r\n    position: relative;\r\n    text-transform: none;\r\n    letter-spacing: -1.5px;\r\n    margin-bottom: 85px;\r\n    @include max-width;\r\n    @include desktop(margin-bottom, 40px);\r\n    @include mobile(font-size, 46px);\r\n    @include mobile(line-height, 40px);\r\n    @include mobile(margin-bottom, 0);\r\n\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: -16px;\r\n      width: 35px;\r\n      height: 2px;\r\n      border-radius: 2px;\r\n      background-color: white;\r\n    }\r\n  }\r\n\r\n  &__call-to-order {\r\n    position: relative;\r\n    height: 20px;\r\n    text-decoration: none;\r\n    @include hover(color, #9fadc2);\r\n    @extend %header__typography;\r\n    @include mobile(display, none);\r\n\r\n    &::before {\r\n      content: \"\";\r\n      position: absolute;\r\n      top: 20px;\r\n      height: 1px;\r\n      width: 111px;\r\n      background-color: #fff;\r\n    }\r\n  }\r\n\r\n  &__logo {\r\n    width: 115px;\r\n    position: relative;\r\n    top: -32px;\r\n    @include mobile(width, 73px);\r\n  }\r\n\r\n  &__phone {\r\n    margin: 0;\r\n    height: max-content;\r\n    text-decoration: none;\r\n    @extend %header__typography;\r\n    @include hover(color, #9fadc2);\r\n\r\n    @include mobile(display, none);\r\n  }\r\n\r\n  &__burger {\r\n    display: none;\r\n    height: 18px;\r\n    width: 18px;\r\n    margin: 0 3px;\r\n    cursor: pointer;\r\n    @include mobile(display, block);\r\n\r\n  }\r\n\r\n  &__logo--tel {\r\n    display: none;\r\n    height: 18px;\r\n    width: 18px;\r\n    margin: 0 3px;\r\n    @include mobile(display, block);\r\n\r\n  }\r\n}\r\n\r\n.nav {\r\n  @include max-width;\r\n\r\n  &__container {\r\n\r\n    display: flex;\r\n    justify-content: space-between;\r\n    padding: 0;\r\n    margin-left: 0;\r\n    margin-right: 0;\r\n    // @include max-width;\r\n    @include mobile(display, none);\r\n  }\r\n\r\n  &__item {\r\n    @extend %header__typography;\r\n    // padding: 8px 24px;\r\n\r\n    &--link {\r\n      padding: 8px 24px;\r\n      @extend %header__typography;\r\n      @include hover(color, #9fadc2);\r\n      @include active(background, #ffffff0f);\r\n      @include active(border-radius, 8px);\r\n      @include active(color, white);\r\n    }\r\n  }\r\n}\r\n\r\n.active {\r\n  padding: 8px 24px;\r\n  background: #ffffff0f;\r\n  border-radius: 8px;\r\n  color: white;\r\n}\r\n","$max-width: 1260px;\r\n\r\n$padding-side-l: 120px;\r\n$padding-side-m: 50px;\r\n$padding-side-s: 20px;\r\n\r\n$header--padding-top-l: 56px;\r\n$header--padding-bottom-l: 48px;\r\n\r\n$header--padding-top-m: 47px;\r\n$header--padding-bottom-m: 30px;\r\n\r\n$header--padding-top-s: 39px;\r\n$header--padding-bottom-s: 80px;\r\n\r\n$header--padding-l: (\r\n  $header--padding-top-l $padding-side-l $header--padding-bottom-l\r\n);\r\n$header--padding-m: (\r\n  $header--padding-top-m $padding-side-m $header--padding-bottom-m\r\n);\r\n$header--padding-s: (\r\n  $header--padding-top-s $padding-side-s $header--padding-bottom-s\r\n);\r\n\r\n$header--height-corr-l: $header--padding-top-l + $header--padding-bottom-l;\r\n$header--height-corr-m: (\r\n  $header--padding-top-m + $header--padding-bottom-m\r\n);\r\n$header--height-corr-s: (\r\n  $header--padding-top-s + $header--padding-bottom-s\r\n);\r\n\r\n$main--padding-top-l: 104px;\r\n$main--padding-bottom-l: 44px;\r\n\r\n$main--padding-top-m: 84px;\r\n$main--padding-bottom-m: 24px;\r\n\r\n$main--padding-top-s: 64px;\r\n$main--padding-bottom-s: 0;\r\n\r\n$main--padding-l: (\r\n  $main--padding-top-l $padding-side-l $main--padding-bottom-l\r\n);\r\n\r\n$main--padding-m: (\r\n  $main--padding-top-m $padding-side-m $main--padding-bottom-m\r\n);\r\n\r\n$main--padding-s: (\r\n  $main--padding-top-s $padding-side-s $main--padding-bottom-s\r\n);\r\n",".main {\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: $main--padding-l;\r\n  @include desktop(padding, $main--padding-m);\r\n  @include mobile(padding, $main--padding-s);\r\n\r\n  &__section {\r\n    display: flex;\r\n    flex-direction: column;\r\n    @include max-width;\r\n    padding-top: $main--padding-top-l;\r\n    @include desktop(padding-top, $main--padding-top-m);\r\n    @include mobile(padding-top, $main--padding-top-s);\r\n  }\r\n}\r\n\r\n.info {\r\n  padding-top: 0;\r\n  flex-direction: row;\r\n  @include mobile(flex-direction, column);\r\n\r\n  &__title {\r\n    width: 50%;\r\n    @include mobile(width, 100%);\r\n  }\r\n\r\n  &__article {\r\n    width: 50%;\r\n    @include mobile(width, 100%);\r\n  }\r\n}\r\n\r\n.gallery {\r\n  flex-direction: column;\r\n\r\n  &__title {\r\n    align-self: center;\r\n    margin-bottom: 61px;\r\n    @include mobile(margin-bottom, 53px);\r\n  }\r\n\r\n  &__article {\r\n    display: flex;\r\n    flex-direction: column;\r\n  }\r\n\r\n  &__img-container {\r\n    display: flex;\r\n    flex-direction: row;\r\n  }\r\n\r\n  &__img {\r\n    border-radius: 8px;\r\n    height: 256px;\r\n    @include mobile(height, 131px);\r\n\r\n    &.img-1 {\r\n      width: 66.6%;\r\n      background: url(\"../images/photos/1.jpg\") no-repeat center;\r\n      background-size: cover;\r\n      margin-right: 20px;\r\n      @include mobile(width, 50%);\r\n\r\n    }\r\n\r\n    &.img-2 {\r\n      width: 33.3%;\r\n      background: url(\"../images/photos/2.jpg\") no-repeat center;\r\n      background-size: cover;\r\n      @include mobile(width, 50%);\r\n\r\n    }\r\n    \r\n    &.img-3 {\r\n      width: 50%;\r\n      background: url(\"../images/photos/3.jpg\") no-repeat center;\r\n      background-size: cover;\r\n      margin-right: 20px;\r\n    }\r\n    \r\n    &.img-4 {\r\n      width: 50%;\r\n      background: url(\"../images/photos/4.jpg\") no-repeat center;\r\n      background-size: cover;\r\n    }\r\n    \r\n    &.img-5 {\r\n      width: 33.3%;\r\n      background: url(\"../images/photos/5.jpg\") no-repeat center;\r\n      background-size: cover;\r\n      margin-right: 20px;\r\n      @include mobile(width, 50%);\r\n\r\n    }\r\n    \r\n    &.img-6 {\r\n      width: 66.6%;\r\n      background: url(\"../images/photos/6.jpg\") no-repeat center;\r\n      background-size: cover;\r\n      @include mobile(width, 50%);\r\n    }\r\n  }\r\n\r\n  &__button {\r\n    align-self: center;\r\n    width: 188px;\r\n    height: 56px;\r\n    margin-top: 24px;\r\n    border: 2px solid #0075ff;\r\n    box-sizing: border-box;\r\n    border-radius: 8px;\r\n\r\n    &.link {\r\n      color: #0075ff;\r\n    }\r\n  }\r\n}\r\n\r\n.testimonials {\r\n\r\n  &__container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    text-align: center;\r\n    width: 100%;\r\n\r\n    @include mobile(flex-direction, column);\r\n    @include mobile(justify-content, center);\r\n  }\r\n\r\n  &__article {\r\n    text-align: center;\r\n    width: 240px;\r\n    margin-bottom: 20px;\r\n\r\n    @include mobile(align-self, center);\r\n  }\r\n\r\n  &__img {\r\n    width: 153px;\r\n    border-radius: 50%;\r\n    margin-bottom: 20px;\r\n  }\r\n}\r\n\r\n.consultation {\r\n  &__container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    @include mobile(flex-direction, column);\r\n    @include mobile(justify-content, center);\r\n  }\r\n  \r\n  &__article {\r\n    display: flex;\r\n    flex-direction: column;\r\n    width: 50%;\r\n    margin-right: 194px;\r\n    @include desktop(margin-right, 100px);\r\n    @include mobile(margin-right, 0);\r\n    @include mobile(align-self, center);\r\n    @include mobile(width, 100%);\r\n  }\r\n\r\n  &__form {\r\n    width: 50%;\r\n    @include mobile(align-self, center);\r\n    @include mobile(width, 100%);\r\n  }\r\n}\r\n\r\n.form {\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  &__label {\r\n    display: none;\r\n  }\r\n\r\n  &__input {\r\n    font-size: 16px;\r\n    width: 100%;\r\n    box-sizing: border-box;\r\n    padding: 17px;\r\n    background: #f7f8ff;\r\n    border: 1px solid #fff;\r\n    border-radius: 8px;\r\n    margin-bottom: 16px;\r\n\r\n    &::placeholder {\r\n      font-family: \"Roboto\", sans-serif;\r\n      font-style: normal;\r\n      font-weight: normal;\r\n      font-size: 14px;\r\n      line-height: 14px;\r\n      color: #b9c1ce;\r\n    }\r\n    &--textarea {\r\n      padding: 17px;\r\n      height: 144px;\r\n\r\n      &::placeholder {\r\n        font-family: \"Roboto\", sans-serif;\r\n        font-style: normal;\r\n        font-weight: normal;\r\n        font-size: 14px;\r\n        line-height: 14px;\r\n        color: #b9c1ce;\r\n      }\r\n    }\r\n  }\r\n\r\n  &__button {\r\n    background: #0067df;\r\n    box-shadow: 0 13px 27px rgba(0, 83, 181, 0.46);\r\n    border: solid 1px #0067df;\r\n    color: #fff;\r\n    margin-top: 18px;\r\n  }\r\n}\r\n\r\n.contacts {\r\n  &__container {\r\n    display: flex;\r\n    flex-direction: row;\r\n    width: 100%;\r\n    @include mobile(flex-direction, column);\r\n\r\n    &--info {\r\n      display: flex;\r\n      flex-direction: row;\r\n      width: 50%;\r\n      justify-content: space-between;\r\n      margin-right: 194px;\r\n      @include desktop(margin-right, 100px);\r\n      @include mobile(margin-right, 0);\r\n      @include mobile(flex-direction, column);\r\n      @include mobile(width, 100%);\r\n    }\r\n  }\r\n\r\n  &__phone-email {\r\n    width: 152px;\r\n    @include mobile(width, 100%);\r\n  }\r\n\r\n  &__address {\r\n    width: 152px;\r\n    @include mobile(width, 100%);\r\n  }\r\n\r\n  &__form {\r\n    width: 50%;\r\n    @include mobile(width, 100%);\r\n  }\r\n}\r\n",".footer {\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  margin-top: 88px;\r\n  height: 359px;\r\n  background: url(\"../images/footer.png\") no-repeat center;\r\n  background-size: cover;\r\n  @include mobile(height, 206px);\r\n\r\n  &__logo {\r\n    width: 115px;\r\n    margin: 40px;\r\n    @include mobile(margin, 24px);\r\n    @include mobile(width, 77px);\r\n  }\r\n}\r\n","@import \"utils\";\r\n@import \"fonts\";\r\n@import \"typography\";\r\n@import \"header\";\r\n@import \"main-sections\";\r\n@import \"footer\";\r\n\r\nhtml {\r\n  scroll-behavior: smooth;\r\n}\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: \"Roboto\", sans-serif;\r\n}\r\n"]}